<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================================
     This script creates all artifacts needed for a Mule Cixs component using
     COXB cobol binding to JAXB and CIXS connectivity.
     Prerequisite: COXB binding classes should have been generated
     using Coxbgen prior to using this script.
  -->
<project basedir="../.." default="compileCixsMule" name="generate-cixsmule">

    <!-- ===========================================================  -->
    <!-- Setup environment
    -->
    <target name="init">

        <property environment="env"/>
        <!-- Generated source code target location   -->
        <property name="cixs.src.dir" value="${basedir}/test-gen"/>
        <!-- Generated binaries target location  -->
        <property name="cixs.bin.dir" value="${basedir}/bin"/>
        <!-- Generated Mule component name   -->
        <property name="cixsmuleComponent" value="MuleLsfileae" />
        <!-- Generated Mule component package name  -->
        <property name="cixsmule.package.name" value="org.mule.providers.legstar.test.lsfileae"/>
        <!-- Generated Mule component method name   -->
        <property name="cixsmule.method.name" value="lsfileae" />
        <!-- CICS program name triggered by the previous method   -->
        <property name="cics.program.name" value="LSFILEAE" />
        
        <!-- Input JAXB type name   -->
        <property name="jaxb.root.name.in" value="DfhcommareaType" />
        <!-- Output JAXB type name   -->
        <property name="jaxb.root.name.out" value="DfhcommareaType" />
        <!-- JAXB classes package name    -->
        <property name="jaxb.package.name" value="com.legstar.test.coxb.lsfileae"/>
        <!-- Location of JAXB and binding classes   -->
        <property name="jaxb.bin.dir" value="D:/Legsem/Legstar/Dev/trunk/legstar-jaxbgen-cases/target/classes"/>
        <!-- Location of COXB and binding classes   -->
        <property name="coxb.bin.dir" value="D:/Legsem/Legstar/Dev/trunk/legstar-coxbgen-cases/target/classes"/>
        <!-- Location of custom code classes   -->
        <property name="cust.bin.dir" value="D:/Legsem/Legstar/Dev/trunk/legstar-coxbgen-cases/target/classes"/>
    
        <!-- Classpath setting -->
        <path id="classpath">
            <dirset dir="${basedir}/bin" />
            <fileset dir="D:/Fady/sandbox/legstar-1.1.0" includes="lib/*.jar" />
            <fileset dir="C:\Program Files\mule-1.4.3\lib\mule" includes="*.jar" />
            <fileset dir="C:/Program Files/Apache/velocity-1.5" includes="*.jar" />
            <fileset dir="C:/Program Files/Apache/velocity-1.5" includes="lib/*.jar" />
            <pathelement location="C:\Program Files\Apache\slf4j-1.4.3\slf4j-api-1.4.3.jar"/>
            <pathelement location="C:\Program Files\Apache\slf4j-1.4.3\slf4j-log4j12-1.4.3.jar"/>
            <!--JAXB and COXB binding classes  -->
            <dirset dir="${jaxb.bin.dir}"/>
            <dirset dir="${coxb.bin.dir}"/>
        </path>

        <!-- Service Generator ant task -->
        <taskdef name="cixsmulegen"
          classname="org.mule.legstar.cixs.generator.CixsMuleComponentGenerator"
          classpathref="classpath" 
        /> 

    </target>

    <!-- ===========================================================  -->
    <!-- This step creates all the artifacts for a Mule component.    -->
  
    <target name="generateCixsMule" depends="init">
    
        <!-- Make sure we have target source directories -->
        <mkdir dir="${cixs.src.dir}"/>
    
        <cixsmulegen targetSrcDir="${cixs.src.dir}"
          >
            <!-- This sample is for a commarea-driven program. If your
                 program is container-driven, you need to add the
                 cicsChannel attribute to the cixsOperation element,
                 specify as many input and output elements as necessary
                 providing  a cicsContainer attribute for each. -->
            <cixsMuleComponent name="${cixsmuleComponent}"
                packageName="${cixsmule.package.name}">
                <cixsOperation name="${cixsmule.method.name}"
                    cicsProgramName="${cics.program.name}">
                    <input
                        jaxbType="${jaxb.root.name.in}"
                        jaxbPackageName="${jaxb.package.name}"
                    />
                    <output
                        jaxbType="${jaxb.root.name.out}"
                        jaxbPackageName="${jaxb.package.name}"
                    />
                </cixsOperation>
            </cixsMuleComponent>
        </cixsmulegen>
    
    </target>
   
    <!-- ===========================================================  -->
    <!-- Compile the generated cixsmuleComponent classes
    -->
    <target name="compileCixsMule" depends="generateCixsMule">
        <mkdir dir="${cixs.bin.dir}"/>
        <javac srcdir="${cixs.src.dir}"
               includes="**/*.java"
               destdir="${cixs.bin.dir}"
               classpathref="classpath"
               fork="yes"
        />
    </target>
  
</project>