<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================================
     Generate a Mule component as an adapter for a mainframe program.
     Artifacts can be used to call a remote Mainframe function.
     Prerequisite: Cobol binding classes should have been generated
     using LegStar Coxbgen prior to using this script.
     Refer to http://www.legsem.com/legstar for info on generating binding classes.
  -->
<project basedir=".." default="signalSuccess" name="generate-mule2cics">

    <!-- ===========================================================  -->
    <!-- Setup environment
    -->
    <target name="init">

        <property environment="env"/>
        <property name="mule.home" value="${env.MULE3_HOME}"/>
        <property name="legstar.home" value="${env.LEGSTAR_HOME}"/>

        <!-- Classpath setting -->
        <path id="classpath">
            <pathelement location="../legstar-mulegen-lsfileaetcp/target/classes"/>
            <pathelement location="../legstar-mulegen-lsfileaetcp/target/classes"/>
            <pathelement location="../legstar-mule-generator/target/classes"/>
            <fileset dir=".." includes="lib/*.jar" />
            <fileset dir="${mule.home}" includes="lib/mule/*.jar" />
        </path>

        <!-- Mule component Generator ant task -->
        <taskdef name="mule2cixsgen"
          classname="org.mule.transport.legstar.gen.Mule2CixsGenerator"
          classpathref="classpath" 
        /> 

    </target>

    <!-- ===========================================================  -->
    <!-- This step creates all the artifacts for a Mule component.    -->
  
    <target name="generateMule2Cixs" depends="init">
    
        <mule2cixsgen targetSrcDir="../legstar-mulegen-lsfileaetcp/src/main/java"
            targetMuleConfigDir="../legstar-mulegen-lsfileaetcp/src/main/resources"
            targetDistDir="../legstar-mulegen-lsfileaetcp/target/dist"
            targetAntDir="../legstar-mulegen-lsfileaetcp/ant"
            targetJarDir="${mule.home}/lib/user"
            targetBinDir="../legstar-mulegen-lsfileaetcp/target/classes"
            jaxbBinDir="../legstar-mulegen-lsfileaetcp/target/classes"
            coxbBinDir="../legstar-mulegen-lsfileaetcp/target/classes"
            custBinDir="../legstar-mule-generator/target/classes"
            hostCharset="IBM01147"
            sampleConfigurationTransport="TCP"
            sampleConfigurationHostMessagingType="LEGSTAR"
            sampleConfigurationPayloadType="XML"
          >
            <cixsMuleComponent name="lsfileaetcp"
                packageName="org.mule.transport.legstar.test.lsfileae">
                <cixsOperation name="lsfileae"
                    cicsProgramName="LSFILEAE"
                    >
                    <input
                        jaxbType="Dfhcommarea"
                        jaxbPackageName="com.legstar.test.coxb.lsfileae"
                    />
                    <output
                        jaxbType="Dfhcommarea"
                        jaxbPackageName="com.legstar.test.coxb.lsfileae"
                    />
                </cixsOperation>
            </cixsMuleComponent>
            <!-- TCP transport parameters -->
            <tcpTransportParameters
                host="mainframe"
                port="3011"
            />
        </mule2cixsgen>
    
    </target>
  
    <!-- ===========================================================  -->
    <!-- Delete the probe file to signal success
    -->
    <target name="signalSuccess" depends="generateMule2Cixs">
        <delete file="${antModel.probeFile}" quiet="true"/>
    </target>
    
</project>