<?xml version="1.0" encoding="UTF-8"?>
<!--
    This Mule configuration implements a proxy service for a mainframe program.
    Transport from mainframe to proxy is HTTP.
    Uses Services instead of Flows because of: http://www.mulesoft.org/jira/browse/MULE-5307
-->
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp"
        xmlns:legstar="http://www.mulesoft.org/schema/mule/legstar"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
        http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/3.1/mule-tcp.xsd
        http://www.mulesoft.org/schema/mule/legstar http://www.legsem.com/legstar/xml/mule-legstar-3.1.xsd">

    <description>Mule configuration file for jvmquery proxy service</description>


    <!-- Transform mainframe data to Java object -->
    <legstar:host-to-java-transformer name="queryJvmHostToJava"
        class="org.mule.transport.legstar.test.jvmquery.HostToJvmQueryRequestMuleTransformer" />

    <!-- Transform Java object to mainframe data -->
    <legstar:java-to-host-transformer name="queryJvmJavaToHost"
        class="org.mule.transport.legstar.test.jvmquery.JvmQueryReplyToHostMuleTransformer" />

    <legstar:endpoint name="MainframeRequestEndpoint" exchange-pattern="request-response"
        address="legstar://megamouss:8083/legstar/services/jvmquery" />

    <model name="jvmqueryModel">
        <service name="queryJvmProxy">
            <inbound>
                <inbound-endpoint ref="MainframeRequestEndpoint"
                    transformer-refs="queryJvmHostToJava"
                    responseTransformer-refs="queryJvmJavaToHost"/>
            </inbound>
            <component class="com.legstar.xsdc.test.cases.jvmquery.JVMQuery"/>
        </service>
    </model>
</mule>
