<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================================
     Generate Mule artifacts to unable a local Mule component to be accessed
     for a mainframe program.
     Artifacts can be used to to expose a Mule component for Mainframe consumption.
     Prerequisite: Cobol binding classes should have been generated
     using LegStar Coxbgen prior to using this script.
     Refer to http://www.legsem.com/legstar for info on generating binding classes.
  -->
<project basedir=".." default="signalSuccess" name="generate-cixs2mule">

    <!-- ===========================================================  -->
    <!-- Setup environment
    -->
    <target name="init">

        <property environment="env"/>
        <property name="mule.home" value="${env.MULE3_HOME}"/>
        <property name="legstar.home" value="${env.LEGSTAR_HOME}"/>

        <!-- Classpath setting -->
        <path id="classpath">
            <pathelement location="../legstar-mulegen-jvmquerywmq/target/classes"/>
            <pathelement location="../legstar-mulegen-jvmquerywmq/target/classes"/>
            <pathelement location="../legstar-mule-generator/target/classes"/>
            <fileset dir=".." includes="lib/*.jar" />
            <fileset dir="${mule.home}" includes="lib/mule/*.jar" />
        </path>

        <!-- Mule component Generator ant task -->
        <taskdef name="cixs2mulegen"
          classname="org.mule.transport.legstar.gen.Cixs2MuleGenerator"
          classpathref="classpath" 
        /> 

    </target>

    <!-- ===========================================================  -->
    <!-- This step creates all the artifacts for a Mule component.    -->
  
    <target name="generateCixs2Mule" depends="init">
    
        <cixs2mulegen targetSrcDir="../legstar-mulegen-jvmquerywmq/src/main/java"
            targetMuleConfigDir="../legstar-mulegen-jvmquerywmq/src/main/resources"
            targetDistDir="../legstar-mulegen-jvmquerywmq/target/dist"
            targetAntDir="../legstar-mulegen-jvmquerywmq/ant"
            targetAppsDir="${mule.home}/apps"
            targetBinDir="../legstar-mulegen-jvmquerywmq/target/classes"
            targetCobolDir="../legstar-mulegen-jvmquerywmq/cobol"
            jaxbBinDir="../legstar-mulegen-jvmquerywmq/target/classes"
            coxbBinDir="../legstar-mulegen-jvmquerywmq/target/classes"
            custBinDir="../legstar-mule-generator/target/classes"
            hostCharset="IBM01147"
            sampleConfigurationTransport="WMQ"
            sampleConfigurationFileName="mule-proxy-config-jvmquerywmq-wmq.xml"
          >
            <cixsMuleComponent name="jvmquerywmq"
                packageName="org.mule.transport.legstar.test.jvmquery"
            >
                <cixsOperation name="queryJvm"
                    cicsProgramName="JVMQUERY"
                    >
                    <input
                        jaxbType="JvmQueryRequest"
                        jaxbPackageName="com.legstar.test.coxb.jvmquery"
                    />
                    <output
                        jaxbType="JvmQueryReply"
                        jaxbPackageName="com.legstar.test.coxb.jvmquery"
                    />
                </cixsOperation>
            </cixsMuleComponent>

            <!-- Target UMO Component parameters -->
            <umoComponentTargetParameters
                implementationName="com.legstar.xsdc.test.cases.jvmquery.JVMQuery"
            />
            <!-- WMQ transport parameters -->
            <wmqTransportParameters
                jndiUrl="src/test/resources/host-jndi"
                jndiContextFactory="org.mule.transport.legstar.config.HostContextFactory"
                connectionFactory="ConnectionFactory"
                zosQueueManager="CSQ1"
                requestQueue="JVMQUERY.POJO.REQUEST.QUEUE"
                replyQueue="JVMQUERY.POJO.REPLY.QUEUE"
            />
        </cixs2mulegen>
    
    </target>
 
    <!-- ===========================================================  -->
    <!-- Delete the probe file to signal success
    -->
    <target name="signalSuccess" depends="generateCixs2Mule">
        <delete file="${antModel.probeFile}" quiet="true"/>
    </target>
    
</project>