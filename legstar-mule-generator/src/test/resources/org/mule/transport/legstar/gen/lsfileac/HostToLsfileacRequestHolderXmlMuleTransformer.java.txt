package org.mule.transport.legstar.test.lsfileac;
import com.legstar.coxb.transform.HostTransformException;
import org.mule.transport.legstar.transformer.AbstractHostToXmlMuleTransformer;
import java.util.HashMap;
import javax.xml.namespace.QName;
import com.legstar.coxb.transform.AbstractXmlTransformers;
import org.mule.api.transformer.TransformerException;
import com.legstar.test.coxb.lsfileac.bind.QueryDataXmlTransformers;
import com.legstar.test.coxb.lsfileac.bind.QueryLimitXmlTransformers;

/**
 * Host Byte Array to XML Mule Transformer for LsfileacRequestHolder type.
 * <p/>
 * <code>HostToLsfileacRequestHolderXmlMuleTransformer</code> takes a byte array in host format
 * (EBCDIC) coming from a source Mainframe as input and turns it into
 * an XML bound to the LsfileacRequestHolder object.
 * <p/>
 * Class generated by LegStar Mule Component generator.
 */
public class HostToLsfileacRequestHolderXmlMuleTransformer extends AbstractHostToXmlMuleTransformer {

    /**
     * Constructs the transformer. Source is a byte array and result will be
     * an XML.
     * @throws HostTransformException if transformer cannot be created
     */
    public HostToLsfileacRequestHolderXmlMuleTransformer() throws HostTransformException {
        super(new HashMap < String, AbstractXmlTransformers >());
        getXmlBindingTransformersMap().put("QueryData", new QueryDataXmlTransformers());
        getXmlBindingTransformersMap().put("QueryLimit", new QueryLimitXmlTransformers());
    }

    /** {@inheritDoc} */
    public QName getHolderQName() throws TransformerException {
        return new QName("http://cixs.test.legstar.com/lsfileac",
                "LsfileacRequestHolder");
    }

}
