##/////////////////////////////////////////////////////////////////////
##Mule Component adapter configuration over WMQ XML Template.
##@author Fady
##@version 0.1
##/////////////////////////////////////////////////////////////////////
#if($clientPayload == "java")
#set($clientPayloadComment = "serialized java objects")
#set($transformerType = "")
#end
#if($clientPayload == "xml")
#set($clientPayloadComment = "XML strings")
#set($transformerType = "Xml")
#end
<?xml version="1.0" encoding="UTF-8"?>
    <!--
        This Mule configuration implements an adapter service for a
        mainframe program. Clients of this Mule service are expected to
        send ${clientPayloadComment} over TCP. Transport from Mule
        service to mainframe is JMS/WebSphere MQ.
    -->
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:tcp="http://www.mulesource.org/schema/mule/tcp/2.2" xmlns:jms="http://www.mulesource.org/schema/mule/jms/2.2"
    xmlns:legstar="http://www.mulesource.org/schema/mule/legstar/2.2"
    xmlns:test="http://www.mulesource.org/schema/mule/test/2.2"
    xsi:schemaLocation="http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
         http://www.mulesource.org/schema/mule/tcp/2.2 http://www.mulesource.org/schema/mule/tcp/2.2/mule-tcp.xsd
         http://www.mulesource.org/schema/mule/jms/2.2 http://www.mulesource.org/schema/mule/jms/2.2/mule-jms.xsd
         http://www.mulesource.org/schema/mule/legstar/2.2 http://www.legsem.com/legstar/xml/mule-legstar-1.0.xsd
         http://www.mulesource.org/schema/mule/test/2.2 http://www.mulesource.org/schema/mule/test/2.2/mule-test.xsd">

    <description>Mule configuration file for ${muleComponent.name} adapter service</description>

    <jms:connector name="jmsJndiConnector"
        jndiInitialFactory="${wmqJndiContextFactory}"
        jndiProviderUrl="${wmqJndiUrl}"
        connectionFactoryJndiName="${wmqConnectionFactory}"
        specification="1.1"
        jndiDestinations="true"
        forceJndiDestinations="true"
        disableTemporaryReplyToDestinations="true"
        numberOfConsumers="1" />

#set($I = 0)
#foreach ($cixsOperation in $muleComponent.cixsOperations)
    <tcp:endpoint name="${cixsOperation.name}ClientEndpoint" address="tcp://localhost:321$I" synchronous="true" />
#set($I = $I + 1)
#end

    <jms:endpoint queue="${wmqRequestQueue}" name="MainframeRequestEndpoint" />
    <jms:endpoint queue="${wmqReplyQueue}" name="MainframeReplyEndpoint" />

    <model name="${muleComponent.name}Model">

#foreach ($cixsOperation in $muleComponent.cixsOperations)
#set($operationPackageName = ${cixsOperation.packageName})
#set($requestTransformer = "${cixsOperation.requestHolderType}${transformerType}ToHostMuleTransformer")
#set($responseTransformer = "HostTo${cixsOperation.responseHolderType}${transformerType}MuleTransformer")
#set($qualRequestTransformer = ${helper.getQualClassName($operationPackageName, $requestTransformer)})
#set($qualResponseTransformer = ${helper.getQualClassName($operationPackageName, $responseTransformer)})
        <service name="${cixsOperation.name}AdapterService">
            <inbound>
                <inbound-endpoint ref="${cixsOperation.name}ClientEndpoint">
                    <transformers>
                        <byte-array-to-object-transformer />
                    </transformers>
                </inbound-endpoint>
            </inbound>
            <outbound>
                <pass-through-router>
                    <outbound-endpoint ref="MainframeRequestEndpoint">
                        <transformers>
                            <legstar:java-to-host-transformer
                                class="${qualRequestTransformer}" />
                            <legstar:host-to-legstar-transformer
                                programPropFileName="${cixsOperation.cicsProgramName.toLowerCase()}.properties" />
                            <jms:object-to-jmsmessage-transformer />
                        </transformers>
                    </outbound-endpoint>
                    <reply-to ref="MainframeReplyEndpoint" />
                </pass-through-router>
            </outbound>
            <async-reply failOnTimeout="false" timeout="2000">
                <inbound-endpoint ref="MainframeReplyEndpoint">
                    <transformers>
                        <jms:jmsmessage-to-object-transformer />
                        <legstar:legstar-to-host-transformer />
                        <legstar:host-to-java-transformer
                            class="${qualResponseTransformer}" />
                    </transformers>
                </inbound-endpoint>
                <custom-async-reply-router
                    class="org.mule.transport.legstar.wmq.WmqSingleResponseRouter" />
            </async-reply>
        </service>
#end

    </model>
</mule>