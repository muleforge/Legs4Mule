##/////////////////////////////////////////////////////////////////////
##Mule Operation Object to Host Byte Array transformer Template.
##@author Fady
##@version 0.1
##/////////////////////////////////////////////////////////////////////
#parse("vlc/cixsmule-operation-transformer-common.vm")
#set($transformerType = "${holderType}ToHostMuleTransformer")
import org.mule.transformer.types.SimpleDataType;
import org.mule.transport.legstar.transformer.AbstractJavaToHostMuleTransformer;
#if($holder)
import java.util.HashMap;
import com.legstar.coxb.transform.AbstractTransformers;
import org.mule.api.transformer.TransformerException;
#else
#foreach($cixsStructure in $cixsStructures)
#set($javaClassName = ${cixsHelper.getJavaClassName(${cixsStructure.jaxbPackageName}, ${cixsStructure.jaxbType})})
import ${javaClassName};
#end
#end
#foreach($cixsStructure in $cixsStructures)
import ${helper.getQualClassName(${cixsStructure.coxbPackageName}, ${cixsStructure.jaxbType})}Transformers;
#end

/**
 * $type to Host Byte Array Mule Transformer.
 * <p/>
 * <code>${transformerType}</code> takes a $type object as input
 * and turns it into a byte array in host format (EBCDIC), ready
 * to be sent to a target Mainframe.
 * <p/> 
 * Class generated by ${generatorName}.
 */
public class ${transformerType} extends AbstractJavaToHostMuleTransformer {

    /**
     * Constructs the transformer. Source is a $type object and result
     * will be a byte array.
     */
    public ${transformerType}() {
#if($holder)
        super(new HashMap < String, AbstractTransformers >());
#foreach($cixsStructure in $cixsStructures)
        getBindingTransformersMap().put("${cixsStructure.cicsContainer}", new ${cixsStructure.jaxbType}Transformers());
#end
#else
#foreach($cixsStructure in $cixsStructures)
        super(new ${cixsStructure.jaxbType}Transformers());
#end
#end
        registerSourceType(new SimpleDataType<Object>(${type}.class));
    }

#if($holder)
    /** {@inheritDoc} */
    public Object getObjectFromHolder(
            final Object holderObject,
            final String partID) throws TransformerException {
            
#foreach($cixsStructure in $cixsStructures)
        if (partID.equals("${cixsStructure.cicsContainer}")) {
            return ((${type}) holderObject).get${cixsStructure.jaxbPropertyName}();
        }
#end
        return null;
    }
#end

}
