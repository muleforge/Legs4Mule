This distribution demonstrates 2 important features of Legs4Mule:

1. A mainframe program (typically an IBM CICS commarea or container program)
   can be exposed via Mule ESB to any consumer, over any transport available
   to Mule.

2. A mainframe program can consume a java service exposed as a UMO component
   via Mule ESB.
   
Exposing a Mainframe program to ESB clients:
-------------------------------------------
Unzip the distribution file to a location of your choice.

The ant folder contains a sample build.xml script that you can customize to
generate a Mule component.

By default, build.xml generates a component for the sample LSFILEAE cobol
program, part of the standard LegStar delivery.

Run build.xml. This will create a src folder. Under src/main/resources, 
Mule configuration samples are generated:

- mule-standalone-config-MuleLsfileae.xml exposes the Mainframe program
  as a Mule component. This component internally uses standard LegStar
  connectivity which means it can connect to the host over TCP, Http or
  Websphere MQ. These artifacts will be removed when the mule legstar
  transport is fully functional.
  
- mule-bridge-config-MuleLsfileae.xml exposes the Mainframe program
  via the Mule standard BridgeComponent. Connectivity is via the new
  legstar transport for Mule. Connectivity to the host is via Http
  only for now. Build.xml generates Mule Transformers.

Consuming ESB services from a Mainframe program:
-----------------------------------------------
Build.xml generates a sample mule-local-config-MuleLsfileae.xml Mule
configuration file that demonstrates how a local component can be
consumed by a mainframe program.

The Mule Transformers generated by build.xml provides for bi-directional
transformation of java beans to host payloads.

Mule ESB and the legstar mule transport replaces the servlet-based
gateway described at http://www.legsem.com/legstar/legstar-c2wsrt.

The API used on the Mainframe side is the same as legstar-c2wsrt.

Routing to different services is not supported right now. If you want
to expose mutiple ESB components, they will have to listen each on a
different port.

Using build.xml for your own mainframe programs:
-----------------------------------------------
In order to create your own Mule-LegStar components you will have to
create legStar binding classes first. These classes are generated using the
standard LegStar binding generator as described here:
http://www.legsem.com/legstar/legstar-coxbgen.


