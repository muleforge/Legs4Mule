##/////////////////////////////////////////////////////////////////////
##Mule Operation XML to Host Byte Array transformer Template.
##@author Fady
##@version 0.1
##/////////////////////////////////////////////////////////////////////
#parse("vlc/cixsmule-operation-transformer-common.vm")
#set($transformerType = "${holderType}XmlToHostMuleTransformer")
import com.legstar.coxb.transform.HostTransformException;
import org.mule.transport.legstar.transformer.AbstractXmlToHostMuleTransformer;
#if($holder)
import java.util.HashMap;
import com.legstar.coxb.transform.AbstractXmlTransformers;
#end
#foreach($cixsStructure in $cixsStructures)
import ${helper.getQualClassName(${cixsStructure.coxbPackageName}, ${cixsStructure.jaxbType})}XmlTransformers;
#end

/**
 * XML to Host Byte Array Mule Transformer for $type type.
 * <p/>
 * <code>${transformerType}</code> takes an XML as input
 * and turns it into a byte array in host format (EBCDIC), ready
 * to be sent to a target Mainframe.
 * <p/> 
 * Class generated by ${generatorName}.
 */
public class ${transformerType} extends AbstractXmlToHostMuleTransformer {

    /**
     * Constructs the transformer.
     * @throws HostTransformException if transformer cannot be created
     */
    public ${transformerType}() throws HostTransformException {
#if($holder)
        super(new HashMap < String, AbstractXmlTransformers >());
#foreach($cixsStructure in $cixsStructures)
        getXmlBindingTransformersMap().put("${cixsStructure.cicsContainer}", new ${cixsStructure.jaxbType}XmlTransformers());
#end
#else
#foreach($cixsStructure in $cixsStructures)
        super(new ${cixsStructure.jaxbType}XmlTransformers());
#end
#end
    }
}
